<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@1540.v295eccc9778f">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@2.2255.v56a_15e805f12"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@2.2255.v56a_15e805f12">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description>build Docker</description>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@4151.v5406e29e3c90">
    <script>pipeline
{
	agent
	{
		label &apos;FirstNode&apos;
	}
	
	stages
	{
stage(&apos;Build Jar packages&apos;)
		{
			steps
			{
				dir(&apos;/Users/manik/selenium-docker&apos;)
				{
					bat &apos;mvn clean package -DskipTests&apos;
				}
			}
		}
		stage(&apos;Copy jar into lib&apos;)
		{
		    
			steps
			{
				
			    
                dir(&apos;/Users/manik/selenium-docker/target/docker-resources&apos;)
                {
					bat &apos;copy selenium-docker.jar libs\\&apos;
					bat &apos;copy selenium-docker-tests.jar libs\\&apos;
				}
				
			}
		}
		stage(&apos;Build Docker Images&apos;)
		{
			steps
			{
				dir(&apos;/Users/manik/selenium-docker&apos;)
				{
					bat &apos;docker build -t=rockermani/testonjenkins .&apos;
					bat &apos;docker run rockermani/testonjenkins&apos;
				}
			}
		}
	}
	post
	{
		success
		{
			echo &apos; Docker build Successfully&apos;
		}
		failure
		{
			echo &apos; Docker not Build Properly&apos;
		}
		
	}
}</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>